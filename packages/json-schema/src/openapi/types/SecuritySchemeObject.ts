import { ISpecificationExtension } from "./ISpecificationExtension"
import { OAuthFlowsObject } from "./OAuthFlowsObject"

/**
 * The type of the security scheme. 
 * Valid values are "apiKey", "http", "mutualTLS", "oauth2", "openIdConnect".
 */
export type SecuritySchemeType = 'apiKey' | 'http' | 'oauth2' | 'openIdConnect'

/**
 * Defines a security scheme that can be used by the operations.
 * 
 * https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.1.0.md#security-scheme-object
 */
export interface SecuritySchemeObject extends ISpecificationExtension {
    /**
     * The type of the security scheme.
     */
    type: SecuritySchemeType
    /**
     * A description for security scheme. 
     * CommonMark syntax MAY be used for rich text representation.
     */
    description?: string
    /**
     * The name of the header, query or cookie parameter to be used.
     */
    name: string
    /**
     * The location of the API key. Valid values are "query", "header" or "cookie".
     */
    in: string
    /**
     * The name of the HTTP Authorization scheme to be used in the Authorization header as defined in RFC7235. 
     * The values used SHOULD be registered in the IANA Authentication Scheme registry.
     */
    scheme: string
    /**
     * A hint to the client to identify how the bearer token is formatted. 
     * Bearer tokens are usually generated by an authorization server, so this information is primarily for documentation purposes.
     */
    bearerFormat?: string
    /**
     * An object containing configuration information for the flow types supported.
     */
    flows: OAuthFlowsObject
    /**
     * OpenId Connect URL to discover OAuth2 configuration values. 
     * This MUST be in the form of a URL. The OpenID Connect standard requires the use of TLS.
     */
    openIdConnectUrl: string
}